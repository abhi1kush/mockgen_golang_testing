// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abhi1kush/mockgen_golang_testing/bird (interfaces: Bird)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBird is a mock of Bird interface.
type MockBird struct {
	ctrl     *gomock.Controller
	recorder *MockBirdMockRecorder
}

// MockBirdMockRecorder is the mock recorder for MockBird.
type MockBirdMockRecorder struct {
	mock *MockBird
}

// NewMockBird creates a new mock instance.
func NewMockBird(ctrl *gomock.Controller) *MockBird {
	mock := &MockBird{ctrl: ctrl}
	mock.recorder = &MockBirdMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBird) EXPECT() *MockBirdMockRecorder {
	return m.recorder
}

// FlyingSpeed mocks base method.
func (m *MockBird) FlyingSpeed() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlyingSpeed")
	ret0, _ := ret[0].(int)
	return ret0
}

// FlyingSpeed indicates an expected call of FlyingSpeed.
func (mr *MockBirdMockRecorder) FlyingSpeed() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlyingSpeed", reflect.TypeOf((*MockBird)(nil).FlyingSpeed))
}
